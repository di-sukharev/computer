/*
    MMIO память (Memory)

    Память состоит из трех чипов: RAM16K, Screen, Keyboard.
    Каждому чипу отведем свой сегмент регистров.

    Сегмент RAM16K занимает регистры с 0 по 16383 включительно.
    Когда обращаешься в память по адресу, например, 832
    — попадаешь в RAM16K чип.
    
    Сегмент Screen (экран) занимает регистры с 16384 по 24575 включительно.
    Когда обращаешься в память по адресу, например, 22123 
    — попадаешь в Screen чип.
    
    Сегмент Keyboard (клавиатура) занимает 24576 регистр.
    Когда обращаешься в память по адресу 24576 
    — попадаешь в Keyboard чип.
    У чипа клавиатуры нет инпутов, только аутпут.
    В аутпуте передается скан-код нажатой клавиши.

    Доступ к адресам вне сегментов, например к 24577 регистру,
    считается невалидным и никак не обрабатывается.

    Чип памяти может быть собран с использованием техники,
    которую вы применяли при сборке семейства RAM чипов.

    Чтобы протестировать код — откройте симулятор в меню запуска кода:
    ctrl + shift + p > Nand2Tetris: Open Hardware Simulator. Сmd для macOS.
    Далее загрузите в симулятор Memory.tst файл через кнопку свитка
    Выберите настройки: Animation — no animation; View — Screen.
    И нажмите на две синие стрелки (play).
    Смотрите инструкцию `how-to-run-simulator.png` в папке /img.
    Папка /img лежит рядом с этим файлом.
*/

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
        // Допишите HDL код, который реализует таблицу истинности этого чипа.
        RAM16K(in=_, load=_, address=_, out=_);
        Screen(in=_, load=_, address=_, out=_);
        Keyboard(out=_);
}

/*
    Читайте главу учебника про MMIO память:
    https://www.sukharev.io/app/courses/cs-part-1/microarchitecture/input-output

    https://www.sukharev.io/app/courses/cs-part-1/microarchitecture/computer 
    или пишите на почту: help@sukharev.io
*/