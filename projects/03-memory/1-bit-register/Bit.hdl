/*
 * 1-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 *                 else out does not change (out[t+1] = out[t])
 */

CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
        // –ù–∞–ø–∏—à–∏—Ç–µ HDL –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ —á–∏–ø–∞ üåû
        // –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —á–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Å–æ–±—Ä–∞–ª–∏ –∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —á–∏–ø DFF(in=input, out=output);
}

/*
    –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–æ—á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
    - –ü—Ä–æ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏–ø–æ–≤ ‚Äî HDL: https://github.com/di-sukharev/computer/tree/master/projects/README.md
    - –ü—Ä–æ —á–∏–ø—ã –ø–∞–º—è—Ç–∏: https://github.com/di-sukharev/computer/tree/master/projects/03-memory/README.md
*/