// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Modified by Sukharev, www.sukharev.io
// File name: projects/02/ALU.hdl

/*
 * АЛУ (Арифметико-логическое устройство).
 * Вычисляет одну из функций:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * в зависимости от шести контрол инпутов: zx,nx,zy,ny,f,no.
 * В дополнение АЛУ имеет два аутпут-флага:
 * если основной аутпут АЛУ == 0, флаг zr устанавливается в 1; в обратном случае zr устанавливается в 0;
 * если основной аутпут АЛУ < 0, флаг ng устанавливается в 1; в обратном случае ng устанавливается в 0.
 */

// Реализация: АЛУ принимает два 16-битных инпута
// и чтобы вычислить аутпут, манипулирует ими вот так:
// if (zx == 1) set x = 0        // 16-битная константа
// if (nx == 1) set x = !x       // побитовая операция not
// if (zy == 1) set y = 0        // 16-битная константа
// if (ny == 1) set y = !y       // побитовая операция not
// if (f == 1)  set out = x + y  // сложение в дополнительном коде
// if (f == 0)  set out = x & y  // побитовая операция and
// if (no == 1) set out = !out   // побитовая операция not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN
        x[16], y[16],  // 16-битные инпуты
        zx, // установить инпут x=0?
        nx, // инвертировать инпут x?
        zy, // установить инпут y=0?
        ny, // инвертировать инпут y?
        f,  // вычислить out = x + y (если 1) ИЛИ x & y (если 0)
        no; // инвертировать out аутпут?

    OUT
        out[16], // 16-битный аутпут
        zr, // 1 если (out == 0) ИЛИ 0
        ng; // 1 если (out < 0) ИЛИ  0

    PARTS:
        // 1. если zx=1 -> перезаписать инпут x в 000…000
        // 2. если nx=1 -> инвертировать инпут x

        // 3. если zy=1 -> перезаписать инпут y в 000…000
        // 4. если ny=1 -> инвертировать инпут y

        // 5. вычисляем x+y и x&y отдельно
        // 6. если f=1 -> out=x+y ИЛИ x&y

        // 7. если no=1 -> инвертируем аутпут out
        // 8. если out < 0 -> устанавливаем аутпут-флаг ng=1

        // 9. если out=0 -> устанавливаем аутпут-флаг zr=1
}