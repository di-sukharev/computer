function Moover.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Moover.move 5
push argument 0
pop pointer 0
push argument 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Moover._isWall 2
not
pop local 0
push argument 1
push constant 1
eq
pop local 1
push argument 1
push constant 2
eq
pop local 2
push argument 1
push constant 3
eq
pop local 3
push argument 1
push constant 4
eq
pop local 4
push local 1
push local 0
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Avatar.moveLeft 1
pop temp 0
label IF_FALSE1
push local 2
push local 0
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
call Avatar.moveUp 1
pop temp 0
label IF_FALSE2
push local 3
push local 0
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
call Avatar.moveRight 1
pop temp 0
label IF_FALSE3
push local 4
push local 0
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
call Avatar.moveDown 1
pop temp 0
label IF_FALSE4
push constant 5
call Sys.wait 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Moover.moveToClosestBlock 2
push argument 0
pop pointer 0
push this 2
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
push pointer 0
call Moover._getCurrentBlock 1
pop this 4
label WHILE_EXP0
push local 0
not
if-goto WHILE_END0
push constant 1
push constant 4
call LCGRandom.randRange 2
pop this 3
push pointer 0
push this 3
call Moover._getBlockFromDirection 2
pop this 5
push this 5
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
call Cell.getBorder 1
push this 3
eq
push this 5
call Cell.getBorder 1
push this 3
call Moover.getParallelWall 1
eq
or
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop this 2
label IF_FALSE0
push pointer 0
push this 3
call Moover.move 2
pop temp 0
push pointer 0
call Moover._getCurrentBlock 1
pop this 4
push this 4
push this 5
eq
push this 1
call Avatar.getX 1
push this 1
call Avatar.getWidth 1
push constant 2
call Math.divide 2
add
push this 5
call Cell.getX 1
push this 5
call Cell.getWidth 1
push constant 2
call Math.divide 2
add
eq
and
push this 1
call Avatar.getY 1
push this 1
call Avatar.getHeight 1
push constant 2
call Math.divide 2
add
push this 5
call Cell.getY 1
push this 5
call Cell.getHeight 1
push constant 2
call Math.divide 2
add
eq
and
pop local 1
push local 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 2
label IF_FALSE2
push constant 0
return
function Moover.getParallelWall 1
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
pop local 0
label IF_FALSE0
push argument 0
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 0
label IF_FALSE1
push argument 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
pop local 0
label IF_FALSE2
push argument 0
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop local 0
label IF_FALSE3
push local 0
return
function Moover._isWall 8
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call Moover._getCurrentBlock 1
pop local 5
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call Avatar.getX 1
push this 1
call Avatar.getSpeed 1
sub
pop local 1
push this 1
call Avatar.getY 1
pop local 2
push this 0
push local 1
push constant 5
sub
push local 2
call Labirinth.getBlockFromXY 3
pop local 6
push local 1
push local 5
call Cell.getX 1
sub
pop local 4
push local 4
push constant 0
lt
push local 4
push constant 0
eq
or
pop local 7
push local 7
push local 5
call Cell.getBorder 1
push constant 1
eq
push local 6
call Cell.getBorder 1
push constant 3
eq
or
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
call Avatar.getX 1
pop local 1
push this 1
call Avatar.getY 1
push this 1
call Avatar.getSpeed 1
sub
pop local 2
push this 0
push local 1
push local 2
push constant 5
sub
call Labirinth.getBlockFromXY 3
pop local 6
push local 2
push local 5
call Cell.getY 1
sub
pop local 3
push local 3
push constant 0
lt
push local 3
push constant 0
eq
or
pop local 7
push local 7
push local 5
call Cell.getBorder 1
push constant 2
eq
push local 6
call Cell.getBorder 1
push constant 4
eq
or
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 0
label IF_FALSE3
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
call Avatar.getX 1
push this 1
call Avatar.getSpeed 1
add
push this 1
call Avatar.getWidth 1
add
pop local 1
push this 1
call Avatar.getY 1
pop local 2
push this 0
push local 1
push constant 10
add
push local 2
call Labirinth.getBlockFromXY 3
pop local 6
push local 1
push local 5
call Cell.getX 1
push local 5
call Cell.getWidth 1
add
sub
pop local 4
push local 4
push constant 0
gt
push local 4
push constant 0
eq
or
pop local 7
push local 7
push local 5
call Cell.getBorder 1
push constant 3
eq
push local 6
call Cell.getBorder 1
push constant 1
eq
or
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 0
label IF_FALSE5
label IF_FALSE4
push argument 1
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 1
call Avatar.getX 1
pop local 1
push this 1
call Avatar.getY 1
push this 1
call Avatar.getSpeed 1
add
push this 1
call Avatar.getHeight 1
add
pop local 2
push this 0
push local 1
push local 2
push constant 10
add
call Labirinth.getBlockFromXY 3
pop local 6
push local 2
push local 5
call Cell.getY 1
push local 5
call Cell.getHeight 1
add
sub
pop local 3
push local 3
push constant 0
gt
push local 3
push constant 0
eq
or
pop local 7
push local 7
push local 5
call Cell.getBorder 1
push constant 4
eq
push local 6
call Cell.getBorder 1
push constant 2
eq
or
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop local 0
label IF_FALSE7
label IF_FALSE6
push local 0
return
function Moover._getBlockFromDirection 4
push argument 0
pop pointer 0
push pointer 0
call Moover._getCurrentBlock 1
pop local 2
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call Cell.getRow 1
push constant 1
sub
pop local 0
push local 2
call Cell.getCol 1
pop local 1
push this 0
push local 0
push local 1
call Labirinth.getBlockFromRowCol 3
pop local 3
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
call Cell.getRow 1
pop local 0
push local 2
call Cell.getCol 1
push constant 1
sub
pop local 1
push this 0
push local 0
push local 1
call Labirinth.getBlockFromRowCol 3
pop local 3
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
call Cell.getRow 1
push constant 1
add
pop local 0
push local 2
call Cell.getCol 1
pop local 1
push this 0
push local 0
push local 1
call Labirinth.getBlockFromRowCol 3
pop local 3
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call Cell.getRow 1
pop local 0
push local 2
call Cell.getCol 1
push constant 1
add
pop local 1
push this 0
push local 0
push local 1
call Labirinth.getBlockFromRowCol 3
pop local 3
label IF_FALSE3
push local 3
return
function Moover._getCurrentBlock 3
push argument 0
pop pointer 0
push this 1
call Avatar.getX 1
push this 1
call Avatar.getWidth 1
push constant 2
call Math.divide 2
add
pop local 0
push this 1
call Avatar.getY 1
push this 1
call Avatar.getHeight 1
push constant 2
call Math.divide 2
add
pop local 1
push this 0
push local 0
push local 1
call Labirinth.getBlockFromXY 3
pop local 2
push local 2
return
