function Labirinth.new 2
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 16
pop local 0
push constant 16
pop local 1
push local 0
push local 1
call Grid.new 2
pop this 0
push pointer 0
return
function Labirinth.render 0
push argument 0
pop pointer 0
push this 0
call Grid.render 1
pop temp 0
push constant 0
return
function Labirinth.getCellFromXY 3
push argument 0
pop pointer 0
push argument 1
push this 0
call Grid.getCellWidth 1
call Math.divide 2
pop local 1
push argument 2
push this 0
call Grid.getCellHeight 1
call Math.divide 2
pop local 2
push pointer 0
push local 1
push local 2
call Labirinth.getCellFromRowCol 3
pop local 0
push local 0
return
function Labirinth.getCellFromRowCol 1
push argument 0
pop pointer 0
push argument 1
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 1
push this 0
call Grid.getRows 1
gt
or
push argument 2
push this 0
call Grid.getCols 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
goto IF_END0
label IF_FALSE0
push this 0
push argument 1
push argument 2
call Grid.getCell 3
pop local 0
label IF_END0
push local 0
return
function Labirinth.getCellFromDirection 4
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Labirinth.getCurrentCell 2
pop local 2
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call Cell.getRow 1
push constant 1
sub
pop local 0
push local 2
call Cell.getCol 1
pop local 1
push pointer 0
push local 0
push local 1
call Labirinth.getCellFromRowCol 3
pop local 3
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
call Cell.getRow 1
pop local 0
push local 2
call Cell.getCol 1
push constant 1
sub
pop local 1
push pointer 0
push local 0
push local 1
call Labirinth.getCellFromRowCol 3
pop local 3
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
call Cell.getRow 1
push constant 1
add
pop local 0
push local 2
call Cell.getCol 1
pop local 1
push pointer 0
push local 0
push local 1
call Labirinth.getCellFromRowCol 3
pop local 3
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call Cell.getRow 1
pop local 0
push local 2
call Cell.getCol 1
push constant 1
add
pop local 1
push pointer 0
push local 0
push local 1
call Labirinth.getCellFromRowCol 3
pop local 3
label IF_FALSE3
push local 3
return
function Labirinth.getCurrentCell 3
push argument 0
pop pointer 0
push argument 1
call Avatar.getX 1
push argument 1
call Avatar.getWidth 1
push constant 2
call Math.divide 2
add
pop local 0
push argument 1
call Avatar.getY 1
push argument 1
call Avatar.getHeight 1
push constant 2
call Math.divide 2
add
pop local 1
push pointer 0
push local 0
push local 1
call Labirinth.getCellFromXY 3
pop local 2
push local 2
return
function Labirinth.getParallelWall 1
push argument 0
pop pointer 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
pop local 0
label IF_FALSE0
push argument 1
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 0
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
pop local 0
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 2
pop local 0
label IF_FALSE3
push local 0
return
function Labirinth.destroy 0
push argument 0
pop pointer 0
push this 0
call Grid.destroy 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
