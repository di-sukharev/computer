function HardestGameEver.new 12
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 16
pop local 9
push constant 16
pop local 10
push local 9
push local 10
call Labirinth.new 2
pop this 4
push this 4
push constant 0
push constant 0
call Labirinth.getBlockFromRowCol 3
pop local 11
push constant 2
pop local 0
push constant 5
pop local 1
push local 11
call Cell.getX 1
push local 11
call Cell.getWidth 1
push constant 2
call Math.divide 2
add
push local 1
push constant 2
call Math.divide 2
sub
pop local 2
push local 11
call Cell.getY 1
push local 11
call Cell.getHeight 1
push constant 2
call Math.divide 2
add
push local 1
push constant 2
call Math.divide 2
sub
pop local 3
push local 2
push local 3
push local 0
push local 1
push local 1
call Avatar.new 5
pop this 0
push this 4
push this 0
call Moover.new 2
pop this 1
push local 0
push constant 2
call Math.multiply 2
pop local 4
push local 1
push constant 2
call Math.multiply 2
pop local 5
push local 1
push constant 2
call Math.multiply 2
pop local 6
push local 11
call Cell.getX 1
push local 11
call Cell.getWidth 1
push constant 2
call Math.divide 2
add
push local 5
push constant 2
call Math.divide 2
sub
pop local 7
push local 11
call Cell.getY 1
push local 11
call Cell.getHeight 1
push constant 2
call Math.divide 2
add
push local 6
push constant 2
call Math.divide 2
sub
pop local 8
push local 7
push local 8
push local 4
push local 5
push local 6
call Avatar.new 5
pop this 2
push this 4
push this 2
call Moover.new 2
pop this 3
push pointer 0
return
function HardestGameEver.run 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call HardestGameEver.initialize 1
pop temp 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push pointer 0
call HardestGameEver.play 1
pop temp 0
push pointer 0
call HardestGameEver.checkIfUserWantsToExit 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call HardestGameEver.destroy 1
pop temp 0
push constant 0
return
function HardestGameEver.initialize 0
push argument 0
pop pointer 0
push this 0
call Avatar.render 1
pop temp 0
push this 4
call Labirinth.render 1
pop temp 0
push constant 0
return
function HardestGameEver.destroy 0
push argument 0
pop pointer 0
push this 4
call Labirinth.destroy 1
pop temp 0
push this 0
call Avatar.destroy 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function HardestGameEver.checkIfUserWantsToExit 2
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 0
push constant 0
pop local 1
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 1
label IF_FALSE0
push local 1
return
function HardestGameEver.play 0
push argument 0
pop pointer 0
push pointer 0
call HardestGameEver.movePlayer 1
pop temp 0
push pointer 0
call HardestGameEver.moveHunter 1
pop temp 0
push constant 0
return
function HardestGameEver.movePlayer 1
push argument 0
pop pointer 0
push pointer 0
call HardestGameEver._getPlayerDirection 1
pop local 0
push this 1
push local 0
call Moover.move 2
pop temp 0
push constant 0
return
function HardestGameEver.moveHunter 0
push argument 0
pop pointer 0
push this 3
call Moover.moveToClosestBlock 1
pop temp 0
push constant 0
return
function HardestGameEver._getPlayerDirection 2
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop local 1
push local 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label IF_FALSE0
push local 1
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 0
label IF_FALSE1
push local 1
push constant 131
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
pop local 0
label IF_FALSE2
push local 1
push constant 132
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
pop local 0
label IF_FALSE3
push local 1
push constant 133
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
pop local 0
label IF_FALSE4
push local 0
return
function HardestGameEver._getHunterDirection 1
push argument 0
pop pointer 0
push constant 1
push constant 4
call LCGRandom.randRange 2
pop local 0
push local 0
return
