class Hunter {

    field Avatar avatar;
    field Moover moover;

    field int speed, width, height;

    constructor Hunter new(Labirinth labirinth) {
        var int startPositionX, startPositionY;
        var Cell startBlock;

        let startBlock = labirinth.getBlockFromRowCol(0, 0);

        let speed = 4;
        
        let width = 10;
        let height = 10;

        let startPositionX = startBlock.getX() + (startBlock.getWidth() / 2) - (width / 2);
        let startPositionY = startBlock.getY() + (startBlock.getHeight() / 2) - (height / 2);
        let avatar = Avatar.new(startPositionX, startPositionY, speed, width, height);
        let moover = Moover.new(labirinth, avatar);

        return this;
    }

    method void move() {
        do moover.moveToClosestBlock();
        
        return;
    }

    method int _getHunterDirection() {
        var int direction;

        let direction = LCGRandom.randRange(1, 4);

        return direction;
    }

    method void destroy() {
        do avatar.destroy();
        
        do Memory.deAlloc(this);
        
        return;
    }

    method int getSpeed() {
        return speed;
    }
    
    method int getWidth() {
        return width;
    }
    
    method int getHeight() {
        return height;
    }
}