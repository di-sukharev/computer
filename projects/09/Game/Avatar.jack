class Avatar {

    field int x, y;
    
    field int size;

    constructor Avatar new(int startX, int startY) {

        let x = startX;
        let y = startY;

        let size = 5;

        return this;
    }

   method void move() {
        var int direction;
        var boolean isMoving;

        let direction = defineDirection();

        let isMoving = ~(direction = 0);

        if (isMoving) {
            
            // do Output.printInt(direction);

            if (direction = 1) { do moveLeft(); }
            if (direction = 2) { do moveUp(); }
            if (direction = 3) { do moveRight(); }
            if (direction = 4) { do moveDown(); }

        }

        do Sys.wait(5);

        return;
    }

     method int defineDirection() {
        var int direction;

        var char keyCode;

        let keyCode = Keyboard.keyPressed();

        let direction = 0; // no keyIs pressed

        if (keyCode = 130) { let direction = 1; } // left arrow
        if (keyCode = 131) { let direction = 2; } // up arrow
        if (keyCode = 132) { let direction = 3; } // right arrow
        if (keyCode = 133) { let direction = 4; } // down arrow

        return direction;
    }

   /** Moves the square up by 2 pixels. */
    method void moveUp() {
      if (y > 1) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
         let y = y - 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + size, y + 1);
      }
      return;
   }

   /** Moves the square down by 2 pixels. */
    method void moveDown() {
      if ((y + size) < 254) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + size, y + 1);
         let y = y + 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, (y + size) - 1, x + size, y + size);
      }
      return;
   }

   /** Moves the square left by 2 pixels. */
    method void moveLeft() {
      if (x > 1) {
         do Screen.setColor(false);
         do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
         let x = x - 2;
         do Screen.setColor(true);
         do Screen.drawRectangle(x, y, x + 1, y + size);
      }
      return;
   }

   /** Moves the square right by 2 pixels. */
    method void moveRight() {
      if ((x + size) < 510) {
         do Screen.setColor(false);
         do Screen.drawRectangle(x, y, x + 1, y + size);
         let x = x + 2;
         do Screen.setColor(true);
         do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
      }
      return;
   }
}