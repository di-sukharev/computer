class Player {

    field Labirinth labirinth;

    field Avatar avatar;
    
    field Moover moover;

    field int speed, width, height;

    constructor(Labirinth l) {
        var int centerOfCellX, centerOfCellY;
        var Cell startCell;

        let labirinth = l;

        let startCell = labirinth.getCellFromRowCol(0, 0);

        let speed = 2;
        let width = 5;
        let height = 5;

        let centerOfCellX = startCell.getX() + (startCell.getWidth() / 2) - (width / 2);
        let centerOfCellY = startCell.getY() + (startCell.getHeight() / 2) - (height / 2);

        let avatar = Avatar.new(centerOfCellX, centerOfCellY, speed, width, height)
        let moover = Moover.new(labirinth, avatar);

        return this;
    }

    method void render() {
        do avatar.render();

        return;
    }

   method void move() {
        var int direction;
        var boolean isMoving;

        let direction = defineDirection();

        do moover.move(direction)

        do Sys.wait(5);

        return;
    }

     method int _defineDirection() {
        var int direction;

        var char keyCode;

        let keyCode = Keyboard.keyPressed();

        let direction = 0; // no keyIs pressed

        if (keyCode = 130) { let direction = 1; } // left arrow
        if (keyCode = 131) { let direction = 2; } // up arrow
        if (keyCode = 132) { let direction = 3; } // right arrow
        if (keyCode = 133) { let direction = 4; } // down arrow

        return direction;
    }
}